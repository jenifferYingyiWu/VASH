VASH - Perceptual Hash project for Videos

Compilation:
Simply run 'make' in this directory. You may need to install a number of libraries and their headers (libavformat, libavcodec, libswscale). Your g++ C++ compiler needs to support the new C++0X standard.


Usage:
-----------------------------
A typical workflow looks like this: Create Workset -> Clustering -> Training -> Testing

Usage:
./vash <command> <parameter #1> [parameter #2]

Possible commands are:
	cluster <#1: Number k> <#2: Workset file> 
	Example: './vash cluster 100 workset/workset.txt'
	* This computes a clustering with k centroids only and saves it to a file

	train	<#1: Workset file>
	Example: './vash train workset/workset.txt'
	* This trains the features GIVEN a centroid file and saves a dataset file.

	combine	<#1: Number k> <#2: Workset file>
	Example: './vash combine 100 workset/workset.txt'
	* This combines cluster + train. Is faster then using the two above commands consecutively.

	test	<#1: Movie Test file>
	Example: './vash test 01.mpg'
	* This detects the title of a movie GIVEN dataset + centroid file.

Remember to escape paths if necessary!


Detailed guide:
You begin with creating a worksetfile.
This is a simple text file, where each line represents a video that you want to include in training. An example can be found in workset/workset.txt

Then, you have to create the BoV representation. For this, run:
'./vash cluster <number of VW> <worksetfile>'
You should now have generated a centroids.db file. The default value for number of VW is 100.
This process may require a lot RAM and CPU time depending on the number and lengths of videos you train.

This is followed by the Training phase:
'./vash train <worksetfile>'
This will generate a dataset.db file. 

Once the centroids.db and dataset.db files are generated, run: 
'./vash test <movie>'
where movie is the video you want to test.
